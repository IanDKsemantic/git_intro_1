GIT PRACTICE WORKSHEET

(If you haven't already gone through the steps in "setup_instructions.txt,"
you should do those first)

To learn about using Git, we're going to do something that should be familar
from school: fill out a worksheet.  

As you go through and answer questions, think about the separate places that your
changes (answers) get recorded: the file on your computer, your local Git 
repository, and your remote Git repository. Any work you do has to get to that
last stop if it's going to be used by your team.

*****************************************************

Answer the question below in the space provided, then save the file.


   1. WHAT DID YOU LAST HAVE FOR LUNCH?

   ANSWER 1: 


Take a look at the file in your GitHub web browser window. Notice that your changes 
have not yet shown up here.  

Now look in GitHub Desktop.

You will need to do 2 things to get your changes into the online repository. 
  A) You will need to COMMIT the changes, which officially "saves" them in your 
     local repository.  Do this by pushing the blue button in the lower right corner.
  B) You will need to PUSH the changes, which applies changes from any commits to the 
     remote repository.  Do that, then confirm in your web browser that the file has 
     changed online.

Talk with your teammates about the possible reasons this process was set up with its 
multple steps.

*****************************************************

Answer the question below in the space provided, then save the file.


   2. WHAT IS YOUR FAVORITE MOVIE?

   ANSWER 2: 


Repeat the process from above, but this time make sure to add a MESSAGE in each step 
explaining the changes that were made.  (Look in the lower left corner in GitHub
Desktop.)

After you've done that, look at the web browser view of Git.  Click on the "Code" 
tab to see the overall repository, then click on "Commits" to see the history of
of commits that have been made.

Talk with your teammates about why this could be helpful and why including messages
with commits is important.

*****************************************************

For the next part, we are going to work with Git's most important use: branching. 

In GitHub Desktop, click on "Current Branch" at the top of the window.  In the 
textbox, type in "Question_3" and then click on the "New Branch" button.  Then 
click on the "Publish" button.

You now have a separate branch where you can make changes without affecting the 
master branch, or the "main" version of the repository.

In VS Code, type in your answer to Question 3 below, save it, and then commit and 
push the changes.


   3. IF YOU COULD TRAVEL TO ONE PLACE IN THE WORLD FOR A WEEKEND, WHERE WOULD
   YOU GO?

   ANSWER 3: 


Now look at the Git repository in your web browser by clicking on the "Code" tab. 
You should be seeing the master branch (check that on the lefthand side), and when
you look in the worksheet.txt file, you shouldn't see your answer to Question 3, 
EVEN THOUGH YOU PUSHED THE CHANGES.  That's because your changes have been saved 
on a SEPARATE BRANCH â€“ they've been saved, but they haven't been made in the main 
version yet.

Now, in the web browser, click the pencil icon to edit the worksheet.txt file by 
filling in an answer to Question 4 below.  When you're done, click the "commit" 
button at the bottom to save the changes.


  4. IF YOU WENT TO THE PLACE FROM QUESTION 3, WHOM WOULD YOU LIKE TO TRAVEL WITH?

  ANSWER 4: 


SO, we now have two separate versions with answers to separate questions that we 
would like to combine ... and we can do that!

In the web browser, go back to the overall view of the repository by clicking on 
the "Code" tab.  Select the green button prompting you to "Compare and pull
request."  